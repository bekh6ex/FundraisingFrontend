---
- name: Copy config file
  copy:
    src: "{{ config_dir }}/{{ inventory_hostname }}/config.prod.json"
    dest: "{{ app_dir }}/{{ release_name }}/app/config/config.prod.json"

- name: Check if configuration file is valid JSON
  command: php -r 'json_decode( file_get_contents( "{{ app_dir }}/{{ release_name }}/app/config/config.prod.json" ) ); echo json_last_error();'
  register: decode_json_config
  failed_when: decode_json_config.stdout != "0"

- name: Validate config file against schema
  command: ./console validate-config app/config/config.dist.json app/config/config.prod.json
  args:
    chdir: "{{ app_dir }}/{{ release_name }}"

- name: Create var dir
  file:
    path: "{{ app_dir }}/{{ release_name }}/var"
    owner: "{{ app_owner }}"
    group: "{{ app_group }}"
    state: directory

- name: Create var/cache dir
  file:
    path: "{{ app_dir }}/{{ release_name }}/var/cache"
    owner: "{{ app_owner }}"
    group: "{{ app_group }}"
    state: directory
    mode: 775

- name: Create web resources symlink
  file:
    src: "{{ app_dir }}/{{ content_directory }}/resources"
    dest: "{{ app_dir }}/{{ release_name }}/web/resources"
    owner: "{{ app_owner }}"
    group: "{{ app_group }}"
    state: link

- name: Create cache-busting prefix
  copy:
    dest: "{{ app_dir }}/{{ release_name }}/var/file_prefix.txt"
    content: "{{ release_name|hash('md5') }}"
    owner: "{{ app_owner }}"
    group: "{{ app_group }}"

- name: Create symlink to log dir
  file:
    src: "{{ app_dir }}/{{ logs_dir }}"
    dest: "{{ app_dir }}/{{ release_name }}/var/log"
    state: link

- name: Create var/doctrine_proxies dir
  file:
    path: "{{ app_dir }}/{{ release_name }}/var/doctrine_proxies"
    owner: "{{ app_owner }}"
    group: "{{ app_group }}"
    state: directory
    mode: 775

- name: Create Doctrine proxy classes
  command: vendor/bin/doctrine orm:generate-proxies var/doctrine_proxies
  args:
    chdir: "{{ app_dir }}/{{ release_name }}"
